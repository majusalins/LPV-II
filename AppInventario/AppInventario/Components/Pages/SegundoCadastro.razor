@page "/segundoCadastro"
@rendermode InteractiveServer
@using AppInventario.Models
@using AppInventario.Services
@inject PessoaService pessoaService
@inject PropriedadeService propriedadeService
@inject NavigationManager navegacao

<div class="container">
    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>
    <div class="form-group">
        <label for="input-datalist">Buscar</label>
        <input type="text" class="form-control" placeholder="Buscar" list="lista-pessoas" @onchange="SelecionarPessoas">
        <datalist id="lista-pessoas">
            @foreach (var item in Pessoas)
            {
                <option value="@item.Cpf">@item.Nome</option>
            }
        </datalist>
    </div>

    <nav class="navbar navbar-light" style="background-color: white"></nav>
    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>
    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">NOME:</label>
        <input @bind="pessoa.Nome" type="text" class="form-control" id="exampleFormControlInput1" disabled="true">
    </div>
    <div class="row align-items-start">
        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">CPF:</label>
                <input @bind="pessoa.Cpf" type="text" class="form-control" id="exampleFormControlInput2" disabled="true">
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">DATA DE NASCIMENTO:</label>
                <input @bind="pessoa.DataNasc" type="text" class="form-control" id="exampleFormControlInput2" disabled="true">
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">TELEFONE:</label>
                <input @bind="pessoa.Telefone" type="tel" class="form-control" id="exampleFormControlInput2" disabled="true">
            </div>
        </div>
    </div>

    <nav class="navbar navbar-light" style="background-color: white"></nav>

    @if (novo == false)
    {
        <button type="button" class="btn btn-success" @onclick="Salvar">SALVAR</button>
        <button type="button" class="btn btn-primary" @onclick="NovoRegistro">CANCELAR</button>
        <button type="button" class="btn btn-warning" @onclick="AddBens">ADD BENS</button>
    }

    <nav class="navbar navbar-light" style="background-color: white"></nav>
    <nav class="navbar navbar-light" style="background-color: darkorange"></nav>
    <nav class="navbar navbar-light" style="background-color: white"></nav>

    @if (novo)
    {
        <div class="alert alert-success" role="alert">
            Salvo com Sucesso!
        </div>
        <button type="button" class="btn btn-primary" @onclick="NovoRegistro">NOVO REGISTRO</button>
    }

    <div class="row align-items-start">
        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">DESCRIÇÃO:</label>
                <input @bind="Descricao" type="text" class="form-control" id="exampleFormControlInput1" disabled="@campoBloqueado">
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">VALOR:</label>
                <input @bind="Valor" type="number" class="form-control" id="exampleFormControlInput1" disabled="@campoBloqueado">
            </div>
        </div>
    </div>

    <nav class="navbar navbar-light" style="background-color: white"></nav>
    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>

    <h4 style="text-align:center">Bens Cadastrados</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Descrição</th>
                <th>Valor</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in bensRegistrados)
            {
                <tr>
                    <td>@item.Descricao</td>
                    <td>@item.Valor?.ToString("C")</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private string? Descricao { get; set; }
    private double? Valor { get; set; }
    private bool novo = false;
    private bool campoBloqueado = false;
    private List<Pessoa> Pessoas { get; set; } = new List<Pessoa>();
    private Pessoa pessoa = new Pessoa();
    private List<Propriedade> bensRegistrados = new List<Propriedade>();

    protected override async Task OnInitializedAsync()
    {
        var lista = await pessoaService.Pessoas();
        if (lista != null)
        {
            Pessoas = lista.ToList();
        }
    }

    private void SelecionarPessoas(ChangeEventArgs e)
    {
        string cpf = e.Value?.ToString() ?? string.Empty;
        pessoa = Pessoas.FirstOrDefault(p => p.Cpf == cpf);
        if (pessoa != null)
        {
            bensRegistrados = pessoa.Propriedades ?? new List<Propriedade>();
            StateHasChanged();
        }
    }

    private void AddBens()
    {
        if (!string.IsNullOrWhiteSpace(Descricao) && Valor.HasValue)
        {
            Propriedade bem = new Propriedade
                {
                    Descricao = Descricao,
                    Valor = Valor,
                    IdPessoa = pessoa.Id
                };
            bensRegistrados.Add(bem);
            Descricao = null;
            Valor = null;
            StateHasChanged();
        }
    }

    public async Task Salvar()
    {
        if (bensRegistrados.Any())
        {
            await propriedadeService.Add(bensRegistrados);
            await propriedadeService.Salvar();
            novo = true;
            campoBloqueado = true;
            StateHasChanged();
        }
    }

    public void NovoRegistro()
    {
        navegacao.NavigateTo("/segundoCadastro", forceLoad: true);
    }
}