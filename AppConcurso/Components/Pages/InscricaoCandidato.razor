@page "/inscricao"
@rendermode InteractiveServer
@using AppConcurso.Models;
@using AppConcurso.Controllers;
@inject InscricaoController inscControl;
@inject CargoController cargoControl;
@inject CandidatoController candControl;
@inject NavigationManager navegacao;


<div class="container">
    <h3>INSCRIÇÃO DE CANDIDATO</h3>

    <div class="form-group">
        <label>Número de Inscrição:</label>
        <input class="form-control" value="@numeroInsc" disabled />
    </div>

    <div class="form-group">
        <label>Data de Inscrição:</label>
        <input class="form-control" value="@DateTime.Today.ToShortDateString()" disabled />
    </div>

    <div class="form-group">
        <label>Candidato:</label>
        <select class="form-control" @onchange="SelecionarCandidatos">
            <option value="">Selecione um candidato</option>
            @foreach (var cand in listaCandidatos)
            {
                <option value="@cand.Cpf">@cand.Nome - @cand.Cpf</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label>Cargo:</label>
        <select class="form-control" @onchange="SelecionarCargos">
            <option selected>Selecione um cargo</option>
            @foreach (var carg in listaCargos)
            {
                <option value=@carg.Id>@carg.NomeCargo</option>
            }
        </select>
    </div>

    @if (candidato != null && !string.IsNullOrEmpty(candidato.Cpf))
    {
        <div class="card mt-3">
            <div class="card-body">
                <h5>Dados do Candidato</h5>
                <p><strong>Nome:</strong> @candidato.Nome</p>
                <p><strong>CPF:</strong> @candidato.Cpf</p>
            </div>
        </div>
    }

    <div class="mt-3">
        <button class="btn btn-primary" @onclick="Salvar" disabled="@(!enabledButton)">Salvar</button>
        <button class="btn btn-secondary ml-2" @onclick="Cancelar">Cancelar</button>
        @if (!enabledButton)
        {
            <button class="btn btn-success ml-2" @onclick="NovaInscricao">Nova Inscrição</button>
        }
    </div>
</div>

@code {
	private List<Cargo> listaCargos = new List<Cargo>();
	private List<Candidato> listaCandidatos = new List<Candidato>();

	private Cargo cargo = new Cargo();
	private Candidato candidato = new Candidato();

	private bool enabledButton = true;
	private int numeroInsc = 0;

	protected override async Task OnInitializedAsync()
	{
		var listaCarg = await cargoControl.ListaCargos();
		var listaCand = await candControl.ListaCandidatos();
		var listaInsc = await inscControl.ListaInscricoes();

		listaCargos = listaCarg;
		listaCandidatos = listaCand;
		numeroInsc = 10000 + listaInsc.Count + 1;
	}

	private async Task Salvar()
	{
		Inscricao inscricao = new Inscricao();
		inscricao.DataInsc = DateTime.Today;
		inscricao.NumInscricao = numeroInsc;
		inscricao.Cargo = cargo;
		inscricao.Candidato = candidato;

		await inscControl.Add(inscricao);
		await inscControl.Salvar();
		enabledButton = false;
	}

	private void Cancelar()
	{
		navegacao.NavigateTo("/inscricao", forceLoad: true);
	}

	public void SelecionarCandidatos(ChangeEventArgs e)
	{
		string cpf = e.Value.ToString();
		candidato = listaCandidatos.Where(p => p.Cpf == cpf).FirstOrDefault();
	}

	public void SelecionarCargos(ChangeEventArgs e)
	{
		int id = Convert.ToInt32(e.Value.ToString());
		cargo = listaCargos.FirstOrDefault(c => c.Id == id);
	}

	public void NovaInscricao()
	{
		navegacao.NavigateTo("/inscricao", forceLoad: true);
	}

}
